{"version":3,"sources":["components/3dScenes/PhysicsTestOne.js","components/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["style","height","PhysicsTestOneCannon","sceneSetup","width","eleModelBlOne","clientWidth","clientHeight","camera","THREE","window","innerWidth","innerHeight","scene","loader","axesHelper","add","renderer","alpha","antialias","setSize","shadowMap","enabled","type","appendChild","domElement","controls","OrbitControls","position","y","z","target","addCustomSceneObjects","world","CANNON","gravity","set","normalMaterial","phongMaterial","cubeGeometry","cubeMesh","x","castShadow","cubeShape","cubeBody","mass","addShape","addBody","sphereGeometry","sphereMesh","sphereShape","sphereBody","icosahedronGeometry","icosahedronMesh","geometry","attributes","array","icosahedronPoints","i","length","push","icosahedronFaces","icosahedronShape","icosahedronBody","planeGeometry","planeMesh","rotateX","Math","PI","receiveShadow","planeShape","planeBody","quaternion","setFromAxisAngle","light1","angle","penumbra","shadow","mapSize","near","far","light2","stats","Stats","document","body","dom","gui","GUI","physicsFolder","addFolder","open","clock","delta","interval","startAnimationLoop","requestID","requestAnimationFrame","update","getDelta","step","w","render","handleWindowResize","aspect","updateProjectionMatrix","this","addEventListener","removeEventListener","cancelAnimationFrame","className","ref","Component","Home","Fragment","PhysicsTestOne","App","basename","process","id","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3c0bf88.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { GUI } from \"three/examples/jsm/libs/dat.gui.module.js\";\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport \"cannon/build/cannon.min.js\";\nimport * as CANNON from \"cannon\";\nimport cannon from \"cannon\";\n//import \"./scss/main.scss\";\n//\nconst style = {\n  height: 600, // we can control scene size by setting container dimensions\n};\n//\n\nclass PhysicsTestOneCannon extends Component {\n  componentDidMount() {\n    // Here you are calling all the functions below\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    //\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n  //\n  //\n  componentWillUnmount() {\n    // this is related to the event listeners that cause problems when using the resizing\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n\n    // this.controls.dispose();\n  }\n  /*\n\n\n                                            ***  1   ***\n\n\n\n  */\n  sceneSetup = () => {\n    //\n    //                WIDTH/HEIGHT\n    // --------------------------------------------\n    //\n    const width = this.eleModelBlOne.clientWidth;\n    const height = this.eleModelBlOne.clientHeight;\n    //\n    // --------------------------------------------\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    //\n    //\n    //\n    //\n    //\n\n    //\n    this.scene = new THREE.Scene();\n    // this.scene.background = new THREE.Color(0xffffff);\n    //\n    //\n    this.loader = new THREE.TextureLoader();\n    //\n    this.axesHelper = new THREE.AxesHelper(5);\n    this.scene.add(this.axesHelper);\n    // ---------------------------------------\n    //                  RENDERER\n    // ---------------------------------------\n    //\n    this.renderer = new THREE.WebGL1Renderer({\n      alpha: true,\n      // will make the edges smooth\n      antialias: true,\n    });\n    //\n    this.renderer.setSize(width, height);\n    //\n    //\n    //\n    // shadowMap is connected to the shadows in any object/model\n    this.renderer.shadowMap.enabled = true;\n    // if you dont add the line below \"THREE.PCFSoftShadowMap\" you will have the shadow but...\n    // BUT the shadow will be pixelated and UGLY\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    //\n    //\n    // here you append it to the jsx\n    this.eleModelBlOne.appendChild(this.renderer.domElement); // mount using React ref\n    // document.appendChild(this.renderer.domElement);  //before\n    //\n\n    //\n    //\n    //\n    //---------------------------\n    //     CONTROLS\n    //---------------------------\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    //\n    //\n    this.camera.position.y = 4;\n    this.camera.position.z = 4;\n    this.controls.target.y = 2;\n\n    // this.camera.position.y = 10;\n    // //\n    // // this.camera.position.z = 3;\n  };\n\n  /*\n\n\n                                            ***  2  ***\n\n\n\n  */\n  addCustomSceneObjects = () => {\n    // //\n    // this.physicsPlugin = new CannonJSPlugin(true, 10, cannon);\n    // this.scene.enablePhysics(new Vector3(0, -9.8, 0), this.physicsPlugin);\n    //\n    //\n    this.world = new CANNON.World();\n    this.world.gravity.set(0, -9.82, 0);\n    // //world.broadphase = new CANNON.NaiveBroadphase() //\n    // //world.solver.iterations = 10\n    // //world.allowSleep = true\n    //\n    //\n    //\n    //\n\n    //----------------------------------\n    //          MODELS / Mesh\n    //----------------------------------\n    //\n    //\n    //\n    this.normalMaterial = new THREE.MeshNormalMaterial();\n    this.phongMaterial = new THREE.MeshPhongMaterial();\n    //\n    //\n    //\n    //-----------------\n    //  CUBE\n    //-----------------\n    // a\n    this.cubeGeometry = new THREE.BoxGeometry(1, 1, 1);\n    this.cubeMesh = new THREE.Mesh(this.cubeGeometry, this.normalMaterial);\n    this.cubeMesh.position.x = -3;\n    this.cubeMesh.position.y = 3;\n    this.cubeMesh.castShadow = true;\n    this.scene.add(this.cubeMesh);\n    //\n    //b\n    // Cube CANNON **\n    // world binding the cube above and below, to use the physics in the animation function\n    this.cubeShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5));\n    this.cubeBody = new CANNON.Body({ mass: 1 });\n    // mass 1 means its going to be affected by gravity, if you add 2, it will twice as heavy\n    // Keep in mind the the positioning of the CUBE Cannon is related to the positioning of the CUBE threejs (above)\n    this.cubeBody.addShape(this.cubeShape);\n    this.cubeBody.position.x = this.cubeMesh.position.x;\n    this.cubeBody.position.y = this.cubeMesh.position.y;\n    this.cubeBody.position.z = this.cubeMesh.position.z;\n    this.world.addBody(this.cubeBody);\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //-----------------\n    //  SPHERE\n    //-----------------\n    this.sphereGeometry = new THREE.SphereGeometry();\n    this.sphereMesh = new THREE.Mesh(this.sphereGeometry, this.normalMaterial);\n    this.sphereMesh.position.x = -1;\n    this.sphereMesh.position.y = 3;\n    this.sphereMesh.castShadow = true;\n    this.scene.add(this.sphereMesh);\n    //\n    //\n    //  Sphere CANNON **\n    //\n    this.sphereShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5)); //new CANNON.sphere(1)\n    this.sphereBody = new CANNON.Body({ mass: 1 }); //If you add 0, its not going to FALL, because its not affected by Gravity\n    // mass 1 means its going to be affected by gravity, if you add 2, it will twice as heavy\n    // Keep in mind the the positioning of the sphere Cannon is related to the positioning of the sphere threejs\n    this.sphereBody.addShape(this.sphereShape);\n    this.sphereBody.position.x = this.sphereMesh.position.x;\n    this.sphereBody.position.y = this.sphereMesh.position.y;\n    this.sphereBody.position.z = this.sphereMesh.position.z;\n    this.world.addBody(this.sphereBody);\n    //\n    //\n    //\n    //\n    //-----------------\n    //  Icosahedron\n    //-----------------\n    //icosahedron is a polyhedron with 20 faces.\n    //\n    this.icosahedronGeometry = new THREE.IcosahedronGeometry(1, 0);\n    this.icosahedronMesh = new THREE.Mesh(\n      this.icosahedronGeometry,\n      this.normalMaterial\n    );\n    this.icosahedronMesh.position.x = 1;\n    this.icosahedronMesh.position.y = 3;\n    this.icosahedronMesh.castShadow = true;\n    this.scene.add(this.icosahedronMesh);\n    //\n    //\n    //\n    //  Icosahedron CANNON\n    //\n    let position = this.icosahedronMesh.geometry.attributes.position.array;\n    this.icosahedronPoints = [];\n    for (let i = 0; i < position.length; i += 3) {\n      this.icosahedronPoints.push(\n        new CANNON.Vec3(position[i], position[i + 1], position[i + 2])\n      );\n    }\n    this.icosahedronFaces = [];\n    for (let i = 0; i < position.length / 3; i += 3) {\n      this.icosahedronFaces.push([i, i + 1, i + 2]);\n    }\n    //\n    this.icosahedronShape = new CANNON.ConvexPolyhedron(\n      this.icosahedronPoints,\n      this.icosahedronFaces\n    );\n    this.icosahedronBody = new CANNON.Body({ mass: 1 });\n    this.icosahedronBody.addShape(this.icosahedronShape);\n    this.icosahedronBody.position.x = this.icosahedronMesh.position.x;\n    this.icosahedronBody.position.y = this.icosahedronMesh.position.y;\n    this.icosahedronBody.position.z = this.icosahedronMesh.position.z;\n    this.world.addBody(this.icosahedronBody);\n    //\n    //\n    //\n    //\n    //\n    //\n\n    //-----------------\n    //  torusKnot\n    //-----------------\n    //\n    // this.torusKnotGeometry = new THREE.TorusKnotGeometry();\n    // this.torusKnotMesh = new THREE.Mesh(\n    //   this.torusKnotGeometry,\n    //   this.normalMaterial\n    // );\n    // this.torusKnotMesh.position.x = 4;\n    // this.torusKnotMesh.position.y = 3;\n    // this.torusKnotMesh.castShadow = true;\n    // this.scene.add(this.torusKnotMesh);\n    // //\n    //\n    //   torusKnot CANNON\n    //\n    //  --------- hide\n    // this.torusKnotPoints = [];\n    // for (let i = 0; i < position.length; i += 3) {\n    //   this.torusKnotPoints.push(\n    //     new CANNON.Vec3(position[i], position[i + 1], position[i + 2])\n    //   );\n    // }\n    // this.torusKnotFaces = [];\n    // for (let i = 0; i < position.length / 3; i += 3) {\n    //   this.torusKnotFaces.push([i, i + 1, i + 2]);\n    // }\n    // this.torusKnotShape = new CANNON.ConvexPolyhedron(\n    //   this.torusKnotPoints,\n    //   this.torusKnotFaces\n    // );\n    //\n    //\n    // const torusKnotShape = new CANNON.ConvexPolyhedron(torusKnotPoints, torusKnotFaces)\n\n    //  --------- hide\n    // this.torusKnotShape = CreateTrimesh(this.torusKnotMesh.geometry); //you are changing the shape again like shere /box\n    //\n    //\n    // const torusKnotShape = CreateTrimesh(this.torusKnotMesh.geometry);\n    // const torusKnotBody = new CANNON.Body({ mass: 1 });\n    // torusKnotBody.addShape(torusKnotShape);\n    // torusKnotBody.position.x = this.torusKnotMesh.position.x;\n    // torusKnotBody.position.y = this.torusKnotMesh.position.y;\n    // torusKnotBody.position.z = this.torusKnotMesh.position.z;\n    // this.world.addBody(torusKnotBody);\n\n    // function CreateTrimesh(geometry) {\n    //   if (!geometry.attributes) {\n    //     geometry = new THREE.BufferGeometry().fromGeometry(geometry);\n    //   }\n    //   const vertices = (geometry = new THREE.BufferGeometry()).attributes\n    //     .position.array;\n    //   const indices = Object.keys(vertices).map(Number);\n    //   return new CANNON.Trimesh((vertices = []), indices);\n    // }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //-----------------\n    //  PLANE / FLOOR\n    //-----------------\n    //\n    this.planeGeometry = new THREE.PlaneGeometry(25, 25);\n    this.planeMesh = new THREE.Mesh(this.planeGeometry, this.phongMaterial);\n    this.planeMesh.rotateX(-Math.PI / 2);\n    this.planeMesh.receiveShadow = true;\n    this.scene.add(this.planeMesh);\n    //\n    // plane CANNON **\n    this.planeShape = new CANNON.Plane(); //the plane in cannnon goes to infinity\n    this.planeBody = new CANNON.Body({ mass: 0 }); //when the mass is at 0, it means it s not going to be affected by Gravity\n    // mass 1 means its going to be affected by gravity, if you add 2, it will twice as heavy\n    this.planeBody.addShape(this.planeShape);\n    //\n    //this line here is equivalent to this line from the threejs plane:   this.planeMesh.rotateX(-Math.PI / 2);\n    this.planeBody.quaternion.setFromAxisAngle(\n      new CANNON.Vec3(1, 0, 0),\n      -Math.PI / 2\n    );\n    this.world.addBody(this.planeBody);\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //---------------------\n    //    New Lights\n    //---------------------\n    // lights 1\n    this.light1 = new THREE.SpotLight();\n    this.light1.position.set(2.5, 5, 5);\n    this.light1.angle = Math.PI / 4;\n    this.light1.penumbra = 0.5;\n    this.light1.castShadow = true;\n    this.light1.shadow.mapSize.width = 1024;\n    this.light1.shadow.mapSize.height = 1024;\n    this.light1.shadow.camera.near = 0.5;\n    this.light1.shadow.camera.far = 20;\n    this.scene.add(this.light1);\n    // //\n    // //\n    this.light2 = new THREE.SpotLight();\n    this.light2.position.set(-2.5, 5, 5);\n    this.light2.angle = Math.PI / 4;\n    this.light2.penumbra = 0.5;\n    this.light2.castShadow = true;\n    this.light2.shadow.mapSize.width = 1024;\n    this.light2.shadow.mapSize.height = 1024;\n    this.light2.shadow.camera.near = 0.5;\n    this.light2.shadow.camera.far = 20;\n    this.scene.add(this.light2);\n    //\n    //\n    //\n    //--------------------------\n    //          STATS\n    //\n    this.stats = Stats();\n    document.body.appendChild(this.stats.dom);\n    //\n    //\n    //--------------------------\n    //          GUI panel\n    //\n    this.gui = new GUI();\n    this.physicsFolder = this.gui.addFolder(\"Physics\");\n    this.physicsFolder.add(this.world.gravity, \"x\", -10.0, 10.0, 0.1);\n    this.physicsFolder.add(this.world.gravity, \"y\", -10.0, 10.0, 0.1);\n    this.physicsFolder.add(this.world.gravity, \"z\", -10.0, 10.0, 0.1);\n    this.physicsFolder.open();\n    //\n\n    //--------------------------\n    //          Clock\n    //\n    this.clock = new THREE.Clock();\n    this.delta = 0;\n    // 30 fps\n    this.interval = 1 / 30;\n    //\n    //\n    //\n  };\n  /*\n\n\n                                            ***  3   ***\n\n\n\n  */\n\n  startAnimationLoop = () => {\n    //\n\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n    // this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n    this.controls.update();\n    //\n    this.delta = this.clock.getDelta();\n    if (this.delta > 0.1) this.delta = 0.1;\n    //\n    // --------------\n    // another option\n    // this.delta += this.clock.getDelta();\n    // if (this.delta > this.interval) {\n    //   // The draw or time dependent code are here\n    //   this.delta = 0.1; //try removing this line :) and\n    //   this.delta = this.delta % this.interval;\n    // }\n    //--------------\n    //\n    //\n    // HERE WE NEED TO update THE WORLD\n    this.world.step(this.delta); //DELTA is what will cause the never ending animation\n    //\n    //---------------------------\n    // The following is going to  Copy coordinates from Cannon.js to Three.js\n    //\n    //\n    //\n    // FALLING CUBE\n    // Here you are finally seeing what the \"world\" is doing\n    // c\n    this.cubeMesh.position.set(\n      this.cubeBody.position.x,\n      this.cubeBody.position.y,\n      this.cubeBody.position.z\n    );\n    // rotation\n    this.cubeMesh.quaternion.set(\n      this.cubeBody.quaternion.x,\n      this.cubeBody.quaternion.y,\n      this.cubeBody.quaternion.z,\n      this.cubeBody.quaternion.w\n    );\n    //\n    //\n    // SPHERE CANNON\n    this.sphereMesh.position.set(\n      this.sphereBody.position.x,\n      this.sphereBody.position.y,\n      this.sphereBody.position.z\n    );\n    this.sphereMesh.quaternion.set(\n      this.sphereBody.quaternion.x,\n      this.sphereBody.quaternion.y,\n      this.sphereBody.quaternion.z,\n      this.sphereBody.quaternion.w\n    );\n    //\n    //\n    //\n    this.icosahedronMesh.position.set(\n      this.icosahedronBody.position.x,\n      this.icosahedronBody.position.y,\n      this.icosahedronBody.position.z\n    );\n    this.icosahedronMesh.quaternion.set(\n      this.icosahedronBody.quaternion.x,\n      this.icosahedronBody.quaternion.y,\n      this.icosahedronBody.quaternion.z,\n      this.icosahedronBody.quaternion.w\n    );\n    //---------------------------\n    //\n    //\n    //\n    //\n    this.stats.update();\n    //\n    this.renderer.render(this.scene, this.camera);\n  };\n  /*\n\n\n\n\n\n\n  */\n  handleWindowResize = () => {\n    const width = this.eleModelBlOne.clientWidth;\n    const height = this.eleModelBlOne.clientHeight;\n    //\n    // updated renderer\n    this.renderer.setSize(width, height);\n    // updated **camera** aspect ratio\n    this.camera.aspect = width / height;\n    // That is the Three.js optimization: you can group multiple camera changes into a block with only one\n    this.camera.updateProjectionMatrix();\n  };\n  /*\n\n\n\n\n\n\n  */\n\n  render() {\n    return (\n      <div className=\"scene-oblivion\">\n        {/* --------------------- */}\n\n        {/* --------------------- */}\n        {/* --------------------- */}\n        <div\n          className=\"modelBleOne\"\n          style={style}\n          ref={(ref) => (this.eleModelBlOne = ref)}\n        ></div>\n        {/* --------------------- */}\n        {/* --------------------- */}\n        {/* --------------------- */}\n      </div>\n    );\n  }\n}\n\nexport default PhysicsTestOneCannon;\n","import React from \"react\";\n\n// import Header from \"../navigation/Header\";\nimport PhysicsTestOneCannon from \"../3dScenes/PhysicsTestOne\";\n// import HomePortfolioGallery from \"./HomePortfolioGallery\";\n// import ContactSection from \"./HomeContact\";\n// import FooterTextAnimation from \"./HomeFooterText\";\n\n//\n\nfunction Home() {\n  return (\n    <React.Fragment>\n      {/* --------------- */}\n      {/* --------------- */}\n      {/* --------------- */}\n      {/* <Header /> */}\n      {/* --------------- */}\n      {/* --------------- */}\n      {/* --------------- */}\n      <section className=\"container-section-scene-home\">\n        {/* ----------------------------------------- */}\n        {/*             FLAG SECTION                  */}\n        {/* ----------------------------------------- */}\n        <div className=\"scene-threejs\">\n          <div className=\"wrapper-flag-scene-threejs\">\n            {/* ----------------------------------------- */}\n\n            <div className=\"wrapper-scene-oblivion\">\n              <PhysicsTestOneCannon />\n            </div>\n            {/* ----------------------------------------- */}\n\n            {/* <div className=\"scene-description-home\">\n              <div className=\"wrapper-scene-description-home\">\n                <h3 className=\"h3-text-img-home\">3D TESTS</h3>\n                <p>\n                  I created this 3d scenes using threejs during my time at DCI.\n                  Additional information about the references used for this\n                  project, can be found in my github.\n                </p>\n              </div>\n            </div> */}\n            {/* ----------------------------------------- */}\n          </div>\n        </div>\n      </section>\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* <section className=\"container-gallery\">\n        <HomePortfolioGallery />\n      </section> */}\n\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n\n      {/* ----------------------------------------- */}\n      {/*             CONTACT SECTION               */}\n      {/* ----------------------------------------- */}\n      {/* <ContactSection /> */}\n      {/* --------------- */}\n      {/* <FooterTextAnimation /> */}\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n//\n\n//\nimport Home from \"./components/home/Home\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <div id=\"wrapper-app\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              {/* <Route exact path=\"/portfolio\" component={Portfolio} /> */}\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}